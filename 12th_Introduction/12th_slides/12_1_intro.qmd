---
title: "Day 1, Part 1: <br>R Introduction"
authors: Brennan Terhune-Cotter and Matt Dye
format: 
  revealjs:
    incremental: true
    smaller: false
    theme: [simple, custom.scss]
    footer: "[https://github.com/brennangitsit/2023_IAM3_R](https://github.com/brennangitsit/2023_IAM3_R) | Thanks to Adam Stone for creating and sharing the content in this slidedeck!"
editor: visual
global_packages:
  - dplyr
  - tidyverse
execute:
  echo: true
---

# Welcome to IAM3!

::: fragment
![](images/Screenshot%202023-06-12%20at%2010.52.39%20AM.png){fig-align="center"}
:::

# Welcome to R!

*R* is a user-friendly, intuitive programming language that allows researchers to efficiently manage, analyze, and visualize data.

*R* is widely used and has become the de facto language for data management and analysis in the scientific community; thus, it is important to learn and can be immensely helpful for you in the future!

## Why Use R?

R is difficult and time-consuming to learn. However, learning R will be worth your while if you want to become a pro at data analysis!

The benefits of processing your data via R include:

-   You can wrangle and analyze your data more efficiently and without mistakes from manual data entry.

-   You can re-run your analysis as many times as you want!

-   You can easily share your analysis with others by sending them your scripts.

-   Your analysis is fully *reproducible* - you have an exact record of what you did with your data from start to finish. *¬∂*

## Reproducibility

-   Reproducible science is the name of the game![^1]

[^1]: Plesser, H. E. (2017). Reproducibility vs. Replicability: A Brief History of a Confused Terminology. Frontiers in Neuroinformatics, 11, 76.

<!-- -->

-   **Methods reproducibility:** Same procedures on data can be exactly repeated by the same team

-   **Results reproducibility:** Same results can be obtained from an independent study with the same procedures

-   **Inferential reproducibility:** Same conclusions can be drawn from an independent replication or a reanalysis

-   Analysis via R addresses **methods reproducibility** & can help with other forms of reproducibility. *¬∂*

## Reproducibility

::: columns
::: {.column width="60%"}
Using reproducible workflows via R will mitigate/solve:

::: nonincremental
1.  Poor statistical analysis
2.  Unavailable methods/code
3.  Unavailable raw data
:::
:::

::: {.column width="40%"}
[![](images/reproducibility.png){alt="Baker, 2016, Nature" fig-align="left" width="400"}](https://www.nature.com/news/1-500-scientists-lift-the-lid-on-reproducibility-1.19970)
:::
:::

## Advantages of Coding in R

::: nonincremental
1.  Code is independent of data

2.  Code handles large or in-progress datasets

3.  Code is documentation

4.  Code outlives your research team

5.  Code generates the visualizations that you actually want

6.  R has an amazing community & resources

7.  You become a coder!
:::

## 1. Code is independent of data

-   **Your data is sacrosanct.** You shouldn't ever mess with it.

-   Code lets you analyze data without touching it.

-   It follows that we shouldn't be analyzing data using spreadsheets. *¬∂*

## What Not to Do {style="text-align: center"}

[![](images/chase.png){width="400"}](https://archive.nytimes.com/dealbook.nytimes.com/2012/05/10/jpmorgan-discloses-significant-losses-in-trading-group/)

## What Not to Do {style="text-align: center"}

::: callout-caution
""operated through a series of Excel spreadsheets, which had to be completed manually, by a process of copying and pasting data from one spreadsheet to another", and "that it should be automated" but never was."
:::

::: callout-caution
"After subtracting the old rate from the new rate, the spreadsheet divided by their sum instead of their average, as the modeler had intended." [^2]
:::

[^2]: https://blog.revolutionanalytics.com/2013/02/did-an-excel-error-bring-down-the-london-whale.html

## What Not to Do, Part Two {style="text-align: center"}

::: columns
::: {.column width="50%"}
![](images/rr_nyr.png)
:::

::: {.column width="50%"}
[![](images/rr_excel.png)](https://seekingalpha.com/article/1345701-researchers-finally-replicated-reinhart-rogoff-and-there-are-serious-problems)
:::
:::

## Cleaning Up Data Manually

Suppose you have survey data from 16 deaf subjects. It looks like this...

```{r, echo = FALSE}
messy_data <- readRDS("../../data/messydata.rds")

# preview messy data
knitr::kable(head(messy_data))
```

## Cleaning Up Data Manually

This data needs to be cleaned up before analysis. You could do this manually via Excel. To be able to get a mean ASL age of exposure, you:

::: nonincremental
-   replace "birth" with "0"

-   replace "2 years old or older" with "2"
:::

However:

-   you have no *documentation* of what you did (unless you write it down manually)

-   other people *cannot see* what decisions you made

-   if you get more data, you will have to manually recode the data again.

-   This leads to mistakes, especially if the project spans multiple researchers and/or years! *¬∂*

## Cleaning Up Data via R

Alternatively, you could use R:

```{r, echo = TRUE}
library(tidyverse) # for pipe (i.e., %>% )
library(dplyr) # for mutate() and case_when()
cleaner_data <- messy_data %>% 
  mutate(age_exposed_asl = case_when(age_exposed_asl == "birth" ~ "0",
                                     age_exposed_asl == "2 years old or older" ~ "2",
                                     TRUE ~ age_exposed_asl
                                     )
         )
```

This code uses the *mutate()* and *case_when()* functions in the *dplyr* package to replace the two non-numeric values while keeping the rest of the values the same.

## Cleaning Up Data via R

See the results!

```{r, echo = FALSE}
knitr::kable(head(cleaner_data))
```

## 2. Code handles in-progress datasets

-   You can write the code before you collect all of your data

-   Then you add new files to your project folder, and rerun your code

-   The code will find the new data and update everything! *¬∂*

## Cleaning up Data via R

Suppose a few months later you add two more subjects:

::: {style="font-size: .6em"}
```{r, echo = FALSE}
knitr::kable(messy_data[7:8,])
```
:::

Instead of manually recoding the data, and hoping it stays consistent from the last time, you can simply rerun the script on the whole dataset to get:

::: {style="font-size: .6em"}
```{r, echo = FALSE}
knitr::kable(cleaner_data[7:8,])
```
:::

[**R allows you to code your data *once* and apply it consistently to *any dataset you have*, including future data!**]{style="color:red"}

## 3. Code is documentation

-   R code is *self-documenting*!

-   Well-written and commented code tells you what you did with the data.

-   You can always go back and see what the code does if you're not sure what you did. *¬∂*

## 4. Code outlives your research team

-   Code allows consistency across *researchers* as well as *subjects* and *time*.

-   Can you be sure your RAs are doing manual work right every single time? Are they doing it the same way as previous RAs?

-   Code automates the manual and repetitive work that humans often make mistakes on. *¬∂*

## 5. Code generates the visualizations you want

::: columns
::: {.column width="50%"}
-   You can use ggplot2 in R to generate a stunning array of visualizations, limited only by your imagination! ü§©
-   No more wrestling with Excel or Google charts üñêÔ∏è
:::

::: {.column width="50%"}
![](images/plot1.png){fig-align="center" width="367"}
:::
:::

![](images/plot2.png){fig-align="center"}

## 6. R has an amazing community & resources

-   If you have a problem, other people have had & solved that problem before.

-   There are open-source packages for almost everything under the sun.

-   There is extensive documentation for everything in R.

-   StackExchange and ChatGPT work really well for solving problems with R.

-   Hadley Wickham has a [free and well-written R textbook](https://r4ds.hadley.nz/).

-   These resources will be covered in the last day. *¬∂*

## 7. You become a coder!

-   Welcome to the world of computer programming!

-   R is a great way to get started via a user-friendly language which can be applied to things you actually use (i.e., data). *¬∂*

::: columns
::: {.column width="50%"}
![](images/Screenshot%202023-06-12%20at%2010.25.06%20AM.png){fig-align="center"}
:::

::: {.column width="50%"}
![](images/Screenshot%202023-06-12%20at%2010.24.43%20AM-01.png){fig-align="center"}
:::
:::

# What to expect...

## Structure of this workshop {.smaller}

-   This workshop will teach you R in an accessible way (coming from someone who only took one formal programming class and none in R!).

-   The primary purpose of this workshop is to teach you the basics of R programming *and get you started on using R for your own research*.

-   Some of you have more experience with R than others, so:

    -   We will be giving lectures half of the time.

    -   The other half will be lab time where you can:

        -   practice the concepts we've taught *or*

        -   work on improving your own R skills using your own data, with our help (OYOLabs).

    -   Sometimes we'll split sessions into *review labs* and *"advanced" lectures.* *¬∂*

## On Your Own (OYO) Labs

-   The hardest part of learning R is applying it to your own specific situation and your own data/projects.

-   OYOLabs are meant for you to build your own workspace (or workspaces) with R so that you have a foundation to continue using R with your own projects after the Institute

    -   You will have Brennan, Matt, and each other to help you work through the problems that will inevitably crop up!

-   We encourage you to use the OYOLabs to work on your projects *as they relate to that day*. For example, on Tuesday (data visualization day!) you should try to write or refine scripts which visualize your data.

    -   However, if you wish to work on other aspects of your R project instead, use your time the best way you feel fit! *¬∂*

## R Clinic

-   We will have an *R Clinic* on Saturday afternoon.

-   This is time for you to meet with me and/or Matt for help and advice with your analysis.

-   Length of appointments will depend on how many people are interested.

-   You are encouraged to also come up to us any other time during the Institute (such as lunchtime) if you desire answers, help, conversation, or a sympathetic shoulder for gentle weeping! *¬∂*

## Workshop schedule (in COURSE OVERVIEW)

![](images/Screenshot%202023-06-05%20at%206.37.52%20PM.png){fig-align="center"}
